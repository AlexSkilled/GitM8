image: golang:latest

variables:
  REPO_NAME: gitlab.com/AlexSkilled/gitm8
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

before_script:
  - mkdir -p "$GOPATH/src/$(dirname $REPO_NAME)"
  - ln -svf "$CI_PROJECT_DIR" "$GOPATH/src/$REPO_NAME"
  - cd "$GOPATH/src/$REPO_NAME"

stages:
  - test
  - build
  - image
  - deploy

format:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)
  only:
    - merge_request
# TODO ?
compile:
  stage: build
  script:
    - go build -o $CI_PROJECT_DIR/startbot ./cmd/main.go
  only:
    - merge_request

publish:
  image: docker:latest
  stage: image
  services:
    - docker:dind
  script:
    - docker build -t $TAG_COMMIT -t $TAG_LATEST .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST
  only:
    - master

delivery:
  stage: deploy

  script:
    - echo $ID_RSA
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $USER@$HOST "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $USER@$HOST "docker pull $TAG_COMMIT"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $USER@$HOST "docker container rm -f my-app || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $USER@$HOST "docker run -d -p 10010:10010 --name gitm8 $TAG_COMMIT --network gitm8"
  environment:
    name: production
    url: http://130.61.248.127
  only:
    - master